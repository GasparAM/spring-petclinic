plugins {
  id 'java'
  id 'maven-publish'
  id 'org.springframework.boot' version '3.0.4'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.20'
  id 'pl.allegro.tech.build.axion-release' version '1.15.0'
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = '3.0.0'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

scmVersion {
    tag {
        prefix.set(rootProject.name)
    }
}

project.version = scmVersion.version

tasks.named('test') {
  useJUnitPlatform()
}

tasks.register('openWithBrowser') {
    dependsOn 'build'
    group 'Custom'
    doLast {
      // Option 1

      String pd = "file://" + projectDir + "/build/reports/tests/test/index.html"
      java.awt.Desktop desktop = java.awt.Desktop.desktop
      desktop.browse(pd.toURI())

      // Option 2

      // String absPath = "" + projectDir + "/build/reports/tests/test/index.html"
      // File file = new File(absPath)
      // java.awt.Desktop.getDesktop().open(file)
    }
}

publishing {
    publications {
      maven(MavenPublication) {
        artifactId = 'spring-petclinic'
        from components.java
        // artifact(“build/libs/finance-$version”+”.jar”) {
        // extension 'jar'
      }
    }
    repositories {
        maven {
            // def releasesRepoUrl = layout.buildDirectory.dir("http://localhost:8079/repository/maven-releases/")
            // def snapshotsRepoUrl = layout.buildDirectory.dir("http://localhost:8079/repository/maven-snapshots/")
            url = "http://localhost:8079/repository/maven-releases/"
            allowInsecureProtocol=true
            credentials {
              username 'admin'
              password 'admin'
            }
            // url = layout.buildDirectory.dir('http://localhost:8079/repository/maven-releases/')
        }
    }
}

